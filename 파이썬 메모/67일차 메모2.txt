import tkinter as tk
from tkinter import Toplevel

class SampleFrame(tk.Frame):
    def __init__(self, root):
        super().__init__(root, width=1300, height=700)
        self.root = root
        self.topleft_Frame = tk.Frame(self, width=950, height=350, bg="#FFFFFF")
        
        self.create_order_form()
        
        # Create the main window
        self.pack()

    def create_order_form(self):
        # 예산 레이블 생성
        self.label13 = tk.Label(self.topleft_Frame, text="예산", cursor="hand2")  # 클릭 가능한 커서
        self.label13.grid(row=1, column=2, padx=5, pady=5, sticky="w")

        # 예산 레이블 클릭 시 새 창을 띄우는 이벤트 연결
        self.label13.bind("<Button-1>", self.open_budget_window)

    def open_budget_window(self, event):
        # 새 창 생성
        new_window = Toplevel(self.root)
        new_window.title("예산 세부 정보")
        new_window.geometry("400x200")

        # 예산 입력 필드 생성
        label = tk.Label(new_window, text="예산 입력:")
        label.pack(pady=10)

        budget_entry = tk.Entry(new_window, width=30)
        budget_entry.pack(pady=10)

        save_button = tk.Button(new_window, text="저장", command=lambda: self.save_budget(budget_entry))
        save_button.pack(pady=10)

    def save_budget(self, budget_entry):
        # 예산 저장 로직 (입력 값 가져오기)
        budget_value = budget_entry.get()
        print(f"저장된 예산: {budget_value}")
        # 예산 값 저장 또는 처리 로직 추가 가능
        # 예: self.entry13.delete(0, tk.END)
        # self.entry13.insert(0, budget_value)

if __name__ == "__main__":
    root = tk.Tk()
    root.geometry("1300x700")
    frame = SampleFrame(root)
    root.mainloop()

import tkinter as tk
from tkinter import Toplevel
from PIL import Image, ImageTk
import requests
from io import BytesIO

class SampleFrame(tk.Frame):
    def __init__(self, root):
        super().__init__(root, width=1300, height=700)
        self.root = root
        
        # 이미지 URL에서 다운로드
        url = "https://ibb.co/B5HSjyX0"  # 여기에 URL을 넣어주세요.
        response = requests.get(url)
        img_data = response.content
        image = Image.open(BytesIO(img_data))  # 이미지를 메모리에서 열기
        
        # 이미지 크기 조정 (필요시)
        image = image.resize((100, 100))  # 원하는 크기로 조정 가능
        
        # Tkinter에서 사용할 수 있도록 변환
        self.img = ImageTk.PhotoImage(image)
        
        # 이미지 버튼 생성
        self.getbudget_button = tk.Button(self.topleft_Frame, image=self.img, command=self.open_budget_window)
        self.getbudget_button.grid(row=1, column=2, padx=5, pady=5, sticky="w")

    def open_budget_window(self):
        # 예산 창을 여는 함수
        new_window = Toplevel(self.root)
        new_window.title("예산")
        new_window.geometry("400x300")
        label = tk.Label(new_window, text="예산 정보를 입력하세요!")
        label.pack()

if __name__ == "__main__":
    r = tk.Tk()
    r.geometry("1600x900")
    fr = SampleFrame(r)
    fr.place(x=300, y=130)
    r.mainloop()

# 담당자	수정일	삭제일	총 금액	부가세	거래처명	사업자번호	거래처 종류	국가	사업자 주소	담당자(거래처) 이름	전화번호(거래처)	이메일(거래처)	거래 상태


        # self.create_bottom()

    # def create_bottom(self):
    #
    #     headers = ["작성 일자", "발주 코드", "내/외부", "작성자 명", "완제품 코드", "예산"]
    #     for i, header in enumerate(headers):
    #         label = tk.Label(self.bottom_Frame, text=header, relief="solid", width=20)
    #         label.grid(row=0, column=i, padx=5, pady=5)




        # self.btnbudget =
        #
        # self.getbudget.bind("<Button-1>", self.open_budget_window)

        # # 이미지 URL
        # img_url = "https://i.ibb.co/B5HSjyX0/your_image.png"  # URL을 넣으세요
        #
        # # 이미지 다운로드
        # with urllib.request.urlopen(img_url) as url:
        #     img_data = url.read()
        #     image = Image.open(BytesIO(img_data))  # BytesIO로 이미지 로드
        #
        # # Tkinter에서 사용할 수 있도록 변환
        # self.img = ImageTk.PhotoImage(image)
        #
        # # 이미지 버튼 생성
        # self.getbudget_button = tk.Button(self.topleft_Frame, image=self.img, command=self.open_budget_window)
        # self.getbudget_button.grid(row=1, column=2, padx=5, pady=5, sticky="w")